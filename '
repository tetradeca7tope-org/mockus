% Unit test for locally polynomial kernel regression

% 1 dimensional test
num_train_pts = 10;
resolution = 100;
h = 0.1;

% prep the function handle
f = @(arg) arg.^2 + 0.3*arg + 0.2 - sin(6*pi*arg); % true function

% prep the data
X = linspace(0, 1, num_train_pts/2 + 2)'; X = X(2:end-1);
X = [X; rand(num_train_pts/2, 1)];
Y = f(X);
th = linspace(0, 1, resolution)';

% fit the function for different poly orders

est_th0 = locallyPolyKernelRegression(th, X, Y, h, 0);
est_th1 = locallyPolyKernelRegression(th, X, Y, h, 1);
est_th2 = locallyPolyKernelRegression(th, X, Y, h, 2);

plot(X, Y, 'kx'); hold on
plot(th, est_th0, 'r-x');
plot(th, est_th1, 'r-.');
plot(th, est_th2, 'r--');
plot(th, f(th), 'b');
legend('pts', 'estimated', 'true');

